{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["export type FormatWalletAddressOptions = {\n  leading?: number;\n  trailing?: number;\n  separator?: string;\n};\n\nconst DEFAULT_LEADING = 6;\nconst DEFAULT_TRAILING = 4;\n\n/**\n * Safe formatter for long wallet addresses like `0x1234...abcd`.\n * Keeps the string intact when it is already short or empty.\n */\nexport function formatWalletAddress(\n  address: string,\n  {\n    leading = DEFAULT_LEADING,\n    trailing = DEFAULT_TRAILING,\n    separator = \"â€¦\"\n  }: FormatWalletAddressOptions = {}\n): string {\n  if (typeof address !== \"string\" || address.trim().length === 0) {\n    return \"\";\n  }\n\n  const normalized = address.trim();\n\n  if (normalized.length <= leading + trailing) {\n    return normalized;\n  }\n\n  const start = normalized.slice(0, leading);\n  const end = normalized.slice(-trailing);\n  return `${start}${separator}${end}`;\n}\n\nexport function assertWalletAddress(address: unknown, message?: string): asserts address is string {\n  if (typeof address !== \"string\" || address.trim().length === 0) {\n    throw new Error(message ?? \"Wallet address must be a non-empty string.\");\n  }\n}\n\nexport default {\n  formatWalletAddress,\n  assertWalletAddress\n};\n"],"names":["formatWalletAddress","address","_temp","_ref","_ref$leading","leading","DEFAULT_LEADING","_ref$trailing","trailing","_ref$separator","separator","trim","length","normalized","slice","assertWalletAddress","message","Error","index"],"mappings":"SAagBA,EACdC,EAAeC,GAKmB,IAAAC,OAAF,IAAED,EAAF,CAAA,EAAEA,EAAAE,EAAAD,EAHhCE,QAAAA,OAAUC,IAAHF,EAVa,EAUKA,EAAAG,EAAAJ,EACzBK,SAAAA,OAAQ,IAAAD,EAVa,EAUMA,EAAAE,EAAAN,EAC3BO,UAAAA,OAAY,IAAHD,EAAG,IAAGA,EAGjB,GAAuB,iBAAZR,GAAkD,IAA1BA,EAAQU,OAAOC,OAChD,MAAO,GAGT,IAAMC,EAAaZ,EAAQU,OAE3B,OAAIE,EAAWD,QAAUP,EAAUG,EAC1BK,EAKT,GAFcA,EAAWC,MAAM,EAAGT,GAEhBK,EADNG,EAAWC,OAAON,EAEhC,UAEgBO,EAAoBd,EAAkBe,GACpD,GAAuB,iBAAZf,GAAkD,IAA1BA,EAAQU,OAAOC,OAChD,UAAUK,MAAa,MAAPD,EAAAA,EAAW,6CAE/B,CAEA,IAAAE,EAAe,CACblB,oBAAAA,EACAe,oBAAAA"}